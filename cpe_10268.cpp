//============================================================
// 標頭檔
//============================================================
#include <iostream>
#include <cmath>
//============================================================
// 巨集
//============================================================
#define MAX_PLOY 99
//============================================================
// 命名空間
//============================================================
using namespace std;
//============================================================
// 主程式
//============================================================
int main() 
{
int iPoly;				//多項式函數的值
int iX;					//代入函數的 X
int iCoef[MAX_PLOY];	//每一項的係數
int iExpon;				//最大項的指數
int i;					//迴圈使用
bool bEndCalc;			//結束標誌
char cEnd;				//結束字元的判斷

while(cin >> iX)
	{
	//初始化
	iPoly = 0;
	for (i = 0; i < MAX_PLOY; i++)
		iCoef[i] = 0;
	//取得係數
	i = 0;
	bEndCalc = false;
	while(!bEndCalc)
		{
		cin >> iCoef[i];
		i += 1;
		cEnd = getchar();
		if (cEnd == '\n' || cEnd == EOF)
			bEndCalc = true;
		}
	//得到最大的指數
	iExpon = i - 1;
	//從最大項開始微分
	for (i = 0; i < iExpon; i++)
		{
		//改變係數
		iCoef[i] *= (iExpon - i);
		//如果不是常數被微分，計算該項的值
		if (((iExpon - i) - 1) >= 0)
			iPoly += iCoef[i]*pow(iX, ((iExpon - i) - 1));
		}
	//輸出結果
	cout << iPoly << endl;
	}
return 0;
}